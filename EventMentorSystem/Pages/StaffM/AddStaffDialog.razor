@using EMS.DB.Models
@using EMS.DB.Constant
@using EMS.DB.Repository.Interface
@inject IEventRepository _EventRepository;
@inject ISnackbar Snackbar;
@inject IUserRepository _UserRepository;
@inject IEventCategoryRepository _EventCategoryRepository;
@inject IStaffRepository _StaffRepository;
@inject ICategoryServiceRepository _CategoryServiceRepository;
@inject IDialogService DialogService
@*<h3>AddStaffDialog</h3>*@
<MudDialog>
    <DialogContent>
        <MudGrid>
            <MudItem lg="6" md="6" xs="12">
            <MudTextField @bind-Value="userModel.UserName" Class="m-0" Label="Staff Name" Variant="Variant.Outlined" Margin="Margin.Normal"></MudTextField>
        </MudItem>
        <MudItem lg="6" md="6" xs="12">
            <MudTextField @bind-Value="userModel.Usercontactno" Class="m-0" Label="MobileNo" Variant="Variant.Outlined" Margin="Margin.Normal"></MudTextField>
        </MudItem>
        <MudItem lg="6" md="6" xs="12">
            <MudTextField @bind-Value="userModel.Useremail" Class="m-0" Label="AltPhoneNo" Variant="Variant.Outlined" Margin="Margin.Normal"></MudTextField>
        </MudItem>
        <MudItem lg="6" md="6" xs="12">
            <MudTextField @bind-Value="userModel.Useraddress" Class="m-0" Label="Email" Variant="Variant.Outlined" Margin="Margin.Normal"></MudTextField>
        </MudItem>
        <MudItem lg="6" md="6" xs="12">
            @*<MudSelect @bind-Value="StaffModel.StaffService" Label="Staff Service" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
            @foreach (var service in GetService())
            {
                <MudSelectItem Value="service.Id">@service.ServiceName</MudSelectItem>
            }
        </MudSelect>*@
            @*<MudSelect @bind-SelectedValues="StaffModel.StaffService" Label="Staff Service" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                @foreach (var service in GetService())
                {
                    <MudSelectItem Value="service.Id">@service.ServiceName</MudSelectItem>
                }
            </MudSelect>*@
        </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="CancelForm" Variant="Variant.Filled" Color="Color.Error">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Save" Variant="Variant.Filled">Update </MudButton>
    </DialogActions>
</MudDialog>

@code {

    private CategoryService ServiceModel = new();
    private Staff StaffModel = new();
    private List<CategoryService> ServiceList = new();
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public User UserModel { get; set; } = new User();
    private bool isReadOnly = false;
    private User userModel = new();
    private List<User> userList = new();

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            StaffModel.UserId = UserModel.Id;
            GetService();
        }

        return base.OnAfterRenderAsync(firstRender);
    }

    private List<CategoryService> GetService()
    {
        ServiceList = _CategoryServiceRepository.GetList();
        return ServiceList;
    }
  
    private List<User> GetLists()
    {
        userList = _UserRepository.GetUserList();
        return userList;
    }

    protected override void OnInitialized()
    {
        if (UserModel is not null && UserModel.Id > 0)
        {
            isReadOnly = true;
        }
        userModel = UserModel;
        base.OnInitialized();
    }


    private void Save()
    {
        try
        {
            _UserRepository.Update(userModel);
            _StaffRepository.Insert(StaffModel);
            MudDialog.Close(DialogResult.Ok(true));
            userModel = new User();
            StaffModel = new Staff();
            Snackbar.Add("staff data updated.", Severity.Success);
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }

    }
    private void Edit()
    {
        try
        {
           
            _StaffRepository.Update(StaffModel);
            MudDialog.Close(DialogResult.Ok(true));
            userModel = new User();
            StaffModel = new Staff();
            Snackbar.Add("staff data updated.", Severity.Success);
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }

    }

    private void CancelForm()
    {
        MudDialog.Close(DialogResult.Ok(true));
        userModel = new User();
    }

}
